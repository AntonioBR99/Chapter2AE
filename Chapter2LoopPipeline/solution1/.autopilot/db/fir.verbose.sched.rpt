

================================================================
== Vitis HLS Report for 'fir'
================================================================
* Date:           Sun Mar 27 11:07:20 2022

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        Chapter2LoopPipeline
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu5p-flva2104-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.772 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       25|       25|  0.250 us|  0.250 us|   26|   26|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- TDL     |       10|       10|         2|          1|          1|    10|       yes|
        |- MAC     |       11|       11|         2|          1|          1|    11|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2
  * Pipeline-1: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 2
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
  Pipeline-1 : II = 1, D = 2, States = { 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 5 
5 --> 7 6 
6 --> 5 
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1"   --->   Operation 8 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %y"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %y, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %x"   --->   Operation 11 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %x, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%x_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %x" [ap_int.cpp:3]   --->   Operation 13 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.46ns)   --->   "%br_ln10 = br void" [ap_int.cpp:10]   --->   Operation 14 'br' 'br_ln10' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 1.53>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%i = phi i4 %add_ln10, void %.split2, i4 10, void" [ap_int.cpp:10]   --->   Operation 15 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 16 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.72ns)   --->   "%icmp_ln10 = icmp_eq  i4 %i, i4 0" [ap_int.cpp:10]   --->   Operation 17 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 10, i64 10, i64 10"   --->   Operation 18 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln10 = br i1 %icmp_ln10, void %.split2, void" [ap_int.cpp:10]   --->   Operation 19 'br' 'br_ln10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.80ns)   --->   "%add_ln10 = add i4 %i, i4 15" [ap_int.cpp:10]   --->   Operation 20 'add' 'add_ln10' <Predicate = (!icmp_ln10)> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln11 = zext i4 %add_ln10" [ap_int.cpp:11]   --->   Operation 21 'zext' 'zext_ln11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%shift_reg_addr = getelementptr i32 %shift_reg, i64 0, i64 %zext_ln11" [ap_int.cpp:11]   --->   Operation 22 'getelementptr' 'shift_reg_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 23 [2/2] (0.73ns)   --->   "%shift_reg_load = load i4 %shift_reg_addr" [ap_int.cpp:11]   --->   Operation 23 'load' 'shift_reg_load' <Predicate = (!icmp_ln10)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>

State 3 <SV = 2> <Delay = 1.46>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%i_cast1 = zext i4 %i" [ap_int.cpp:10]   --->   Operation 24 'zext' 'i_cast1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%specloopname_ln8 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [ap_int.cpp:8]   --->   Operation 25 'specloopname' 'specloopname_ln8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 26 [1/2] (0.73ns)   --->   "%shift_reg_load = load i4 %shift_reg_addr" [ap_int.cpp:11]   --->   Operation 26 'load' 'shift_reg_load' <Predicate = (!icmp_ln10)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%shift_reg_addr_1 = getelementptr i32 %shift_reg, i64 0, i64 %i_cast1" [ap_int.cpp:11]   --->   Operation 27 'getelementptr' 'shift_reg_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.73ns)   --->   "%store_ln11 = store i32 %shift_reg_load, i4 %shift_reg_addr_1" [ap_int.cpp:11]   --->   Operation 28 'store' 'store_ln11' <Predicate = (!icmp_ln10)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 29 'br' 'br_ln0' <Predicate = (!icmp_ln10)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.73>
ST_4 : Operation 30 [1/1] (0.73ns)   --->   "%store_ln13 = store i32 %x_read, i32 0" [ap_int.cpp:13]   --->   Operation 30 'store' 'store_ln13' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_4 : Operation 31 [1/1] (0.46ns)   --->   "%br_ln17 = br void" [ap_int.cpp:17]   --->   Operation 31 'br' 'br_ln17' <Predicate = true> <Delay = 0.46>

State 5 <SV = 3> <Delay = 0.82>
ST_5 : Operation 32 [1/1] (0.00ns)   --->   "%i_1 = phi i5 %add_ln17, void %.split, i5 10, void" [ap_int.cpp:17]   --->   Operation 32 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 33 [1/1] (0.00ns)   --->   "%acc = phi i32 %acc_3, void %.split, i32 0, void"   --->   Operation 33 'phi' 'acc' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 34 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 34 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 35 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %i_1, i32 4" [ap_int.cpp:17]   --->   Operation 35 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 36 [1/1] (0.00ns)   --->   "%empty_6 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 11, i64 11, i64 11"   --->   Operation 36 'speclooptripcount' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 37 [1/1] (0.00ns)   --->   "%br_ln17 = br i1 %tmp, void %.split, void" [ap_int.cpp:17]   --->   Operation 37 'br' 'br_ln17' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 38 [1/1] (0.82ns)   --->   "%add_ln17 = add i5 %i_1, i5 31" [ap_int.cpp:17]   --->   Operation 38 'add' 'add_ln17' <Predicate = (!tmp)> <Delay = 0.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 39 [1/1] (0.00ns)   --->   "%i_1_cast = zext i5 %i_1" [ap_int.cpp:17]   --->   Operation 39 'zext' 'i_1_cast' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 40 [1/1] (0.00ns)   --->   "%shift_reg_addr_2 = getelementptr i32 %shift_reg, i64 0, i64 %i_1_cast" [ap_int.cpp:18]   --->   Operation 40 'getelementptr' 'shift_reg_addr_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 41 [2/2] (0.73ns)   --->   "%shift_reg_load_1 = load i4 %shift_reg_addr_2" [ap_int.cpp:18]   --->   Operation 41 'load' 'shift_reg_load_1' <Predicate = (!tmp)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_5 : Operation 42 [1/1] (0.00ns)   --->   "%c_addr = getelementptr i10 %c, i64 0, i64 %i_1_cast" [ap_int.cpp:18]   --->   Operation 42 'getelementptr' 'c_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 43 [2/2] (0.73ns)   --->   "%c_load = load i4 %c_addr" [ap_int.cpp:18]   --->   Operation 43 'load' 'c_load' <Predicate = (!tmp)> <Delay = 0.73> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 10> <Depth = 11> <ROM>

State 6 <SV = 4> <Delay = 5.77>
ST_6 : Operation 44 [1/1] (0.00ns)   --->   "%specloopname_ln7 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [ap_int.cpp:7]   --->   Operation 44 'specloopname' 'specloopname_ln7' <Predicate = (!tmp)> <Delay = 0.00>
ST_6 : Operation 45 [1/2] (0.73ns)   --->   "%shift_reg_load_1 = load i4 %shift_reg_addr_2" [ap_int.cpp:18]   --->   Operation 45 'load' 'shift_reg_load_1' <Predicate = (!tmp)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_6 : Operation 46 [1/2] (0.73ns)   --->   "%c_load = load i4 %c_addr" [ap_int.cpp:18]   --->   Operation 46 'load' 'c_load' <Predicate = (!tmp)> <Delay = 0.73> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 10> <Depth = 11> <ROM>
ST_6 : Operation 47 [1/1] (0.00ns)   --->   "%sext_ln18 = sext i10 %c_load" [ap_int.cpp:18]   --->   Operation 47 'sext' 'sext_ln18' <Predicate = (!tmp)> <Delay = 0.00>
ST_6 : Operation 48 [1/1] (3.90ns)   --->   "%mul_ln18 = mul i32 %sext_ln18, i32 %shift_reg_load_1" [ap_int.cpp:18]   --->   Operation 48 'mul' 'mul_ln18' <Predicate = (!tmp)> <Delay = 3.90> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.90> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 49 [1/1] (1.14ns)   --->   "%acc_3 = add i32 %mul_ln18, i32 %acc" [ap_int.cpp:18]   --->   Operation 49 'add' 'acc_3' <Predicate = (!tmp)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 50 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 50 'br' 'br_ln0' <Predicate = (!tmp)> <Delay = 0.00>

State 7 <SV = 4> <Delay = 5.04>
ST_7 : Operation 51 [1/1] (3.90ns)   --->   "%mul_ln27 = mul i32 %x_read, i32 53" [ap_int.cpp:27]   --->   Operation 51 'mul' 'mul_ln27' <Predicate = true> <Delay = 3.90> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.90> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 52 [1/1] (1.14ns)   --->   "%acc_2 = add i32 %acc, i32 %mul_ln27" [ap_int.cpp:27]   --->   Operation 52 'add' 'acc_2' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 53 [1/1] (0.73ns)   --->   "%store_ln28 = store i32 %x_read, i32 0" [ap_int.cpp:28]   --->   Operation 53 'store' 'store_ln28' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 11> <RAM>
ST_7 : Operation 54 [1/1] (0.00ns)   --->   "%write_ln29 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %y, i32 %acc_2" [ap_int.cpp:29]   --->   Operation 54 'write' 'write_ln29' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 55 [1/1] (0.00ns)   --->   "%ret_ln30 = ret" [ap_int.cpp:30]   --->   Operation 55 'ret' 'ret_ln30' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', ap_int.cpp:10) with incoming values : ('add_ln10', ap_int.cpp:10) [15]  (0.46 ns)

 <State 2>: 1.54ns
The critical path consists of the following:
	'phi' operation ('i', ap_int.cpp:10) with incoming values : ('add_ln10', ap_int.cpp:10) [15]  (0 ns)
	'add' operation ('add_ln10', ap_int.cpp:10) [21]  (0.809 ns)
	'getelementptr' operation ('shift_reg_addr', ap_int.cpp:11) [25]  (0 ns)
	'load' operation ('shift_reg_load', ap_int.cpp:11) on array 'shift_reg' [26]  (0.73 ns)

 <State 3>: 1.46ns
The critical path consists of the following:
	'load' operation ('shift_reg_load', ap_int.cpp:11) on array 'shift_reg' [26]  (0.73 ns)
	'store' operation ('store_ln11', ap_int.cpp:11) of variable 'shift_reg_load', ap_int.cpp:11 on array 'shift_reg' [28]  (0.73 ns)

 <State 4>: 0.73ns
The critical path consists of the following:
	'store' operation ('store_ln13', ap_int.cpp:13) of variable 'x', ap_int.cpp:3 on array 'shift_reg' [31]  (0.73 ns)

 <State 5>: 0.825ns
The critical path consists of the following:
	'phi' operation ('i', ap_int.cpp:17) with incoming values : ('add_ln17', ap_int.cpp:17) [34]  (0 ns)
	'add' operation ('add_ln17', ap_int.cpp:17) [41]  (0.825 ns)

 <State 6>: 5.77ns
The critical path consists of the following:
	'load' operation ('shift_reg_load_1', ap_int.cpp:18) on array 'shift_reg' [45]  (0.73 ns)
	'mul' operation ('mul_ln18', ap_int.cpp:18) [49]  (3.9 ns)
	'add' operation ('acc', ap_int.cpp:18) [50]  (1.14 ns)

 <State 7>: 5.04ns
The critical path consists of the following:
	'mul' operation ('mul_ln27', ap_int.cpp:27) [53]  (3.9 ns)
	'add' operation ('acc', ap_int.cpp:27) [54]  (1.14 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
